{"version":3,"sources":["constants/common.js","components/CustomForm/formValidation.js","components/common/SelectInput/index.jsx","components/common/FormInput/index.jsx","constants/env.js","components/common/Button/index.jsx","components/CustomForm/index.jsx","components/features/Unsubscribe.jsx","components/features/Subsribers.jsx","components/features/Coffee.jsx","components/App.js","serviceWorker.js","index.js","assets/bmc-button.png"],"names":["ageGroupList","value","label","vaccinePrefList","stateList","registerSchema","Yup","shape","name","matches","required","min","age","notifyOn","mode","SelectInput","this","props","onChange","isDisabled","error","options","isMulti","isSearchable","placeholder","className","defaultValue","labelText","classNameOut","cx","classNamePrefix","Component","FormInput","type","id","conditionalClass","disabled","component","apiBaseUrl","Button","content","formInitialValues","email","telegram","vaccinePref","state","district","pincode","CustomForm","useState","initialValues","setInitialValues","districtList","setDistrictList","handleSelectChange","setFieldValue","key","selectedOption","getDistrictList","stateId","a","fetch","method","headers","Accept","body","JSON","stringify","state_id","rawResponse","json","status","districts","data","map","d","district_id","toString","district_name","window","alert","useEffect","validationSchema","onSubmit","values","actions","payload","parseInt","dist_id","response","resetForm","handleSubmit","htmlFor","role","aria-labelledby","href","target","errors","formIinitialValues","Unsubscribe","Subsribers","subscribedUsers","setSubscribedUsers","getSubscribedData","setInterval","Coffee","src","bmcButton","alt","width","height","App","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"6MAGaA,EAAe,CAC1B,CAAEC,MAAO,GAAIC,MAAO,OACpB,CAAED,MAAO,GAAIC,MAAO,QAGTC,EAAkB,CAC7B,CAAEF,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,aAAcC,MAAO,eAGnBE,EAAY,CACvB,CACEH,MAAO,EACPC,MAAO,+BAET,CACED,MAAO,EACPC,MAAO,kBAET,CACED,MAAO,EACPC,MAAO,qBAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,cAET,CACED,MAAO,EACPC,MAAO,gBAET,CACED,MAAO,EACPC,MAAO,0BAET,CACED,MAAO,GACPC,MAAO,iBAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,GACPC,MAAO,OAET,CACED,MAAO,GACPC,MAAO,WAET,CACED,MAAO,GACPC,MAAO,WAET,CACED,MAAO,GACPC,MAAO,oBAET,CACED,MAAO,GACPC,MAAO,qBAET,CACED,MAAO,GACPC,MAAO,aAET,CACED,MAAO,GACPC,MAAO,aAET,CACED,MAAO,GACPC,MAAO,UAET,CACED,MAAO,GACPC,MAAO,UAET,CACED,MAAO,GACPC,MAAO,eAET,CACED,MAAO,GACPC,MAAO,kBAET,CACED,MAAO,GACPC,MAAO,eAET,CACED,MAAO,GACPC,MAAO,WAET,CACED,MAAO,GACPC,MAAO,aAET,CACED,MAAO,GACPC,MAAO,WAET,CACED,MAAO,GACPC,MAAO,YAET,CACED,MAAO,GACPC,MAAO,UAET,CACED,MAAO,GACPC,MAAO,cAET,CACED,MAAO,GACPC,MAAO,UAET,CACED,MAAO,GACPC,MAAO,aAET,CACED,MAAO,GACPC,MAAO,UAET,CACED,MAAO,GACPC,MAAO,cAET,CACED,MAAO,GACPC,MAAO,aAET,CACED,MAAO,GACPC,MAAO,WAET,CACED,MAAO,GACPC,MAAO,iBAET,CACED,MAAO,GACPC,MAAO,eAET,CACED,MAAO,GACPC,MAAO,gBC5JEG,EAAiBC,MAAaC,MAAM,CAC/CC,KAAMF,MAC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","file":"static/js/main.7109211e.chunk.js","sourcesContent":["export const numeric = /^[0-9]*$/;\nexport const lettersWithSpaces = /^[a-zA-Z ]*$/;\n\nexport const ageGroupList = [\n  { value: 18, label: \"18+\" },\n  { value: 45, label: \"45+\" }\n];\n\nexport const vaccinePrefList = [\n  { value: \"covaxin\", label: \"Covaxin\" },\n  { value: \"covishield\", label: \"Covishield\" }\n]\n\nexport const stateList = [\n  {\n    value: 1,\n    label: \"Andaman and Nicobar Islands\"\n  },\n  {\n    value: 2,\n    label: \"Andhra Pradesh\"\n  },\n  {\n    value: 3,\n    label: \"Arunachal Pradesh\"\n  },\n  {\n    value: 4,\n    label: \"Assam\"\n  },\n  {\n    value: 5,\n    label: \"Bihar\"\n  },\n  {\n    value: 6,\n    label: \"Chandigarh\"\n  },\n  {\n    value: 7,\n    label: \"Chhattisgarh\"\n  },\n  {\n    value: 8,\n    label: \"Dadra and Nagar Haveli\"\n  },\n  {\n    value: 37,\n    label: \"Daman and Diu\"\n  },\n  {\n    value: 9,\n    label: \"Delhi\"\n  },\n  {\n    value: 10,\n    label: \"Goa\"\n  },\n  {\n    value: 11,\n    label: \"Gujarat\"\n  },\n  {\n    value: 12,\n    label: \"Haryana\"\n  },\n  {\n    value: 13,\n    label: \"Himachal Pradesh\"\n  },\n  {\n    value: 14,\n    label: \"Jammu and Kashmir\"\n  },\n  {\n    value: 15,\n    label: \"Jharkhand\"\n  },\n  {\n    value: 16,\n    label: \"Karnataka\"\n  },\n  {\n    value: 17,\n    label: \"Kerala\"\n  },\n  {\n    value: 18,\n    label: \"Ladakh\"\n  },\n  {\n    value: 19,\n    label: \"Lakshadweep\"\n  },\n  {\n    value: 20,\n    label: \"Madhya Pradesh\"\n  },\n  {\n    value: 21,\n    label: \"Maharashtra\"\n  },\n  {\n    value: 22,\n    label: \"Manipur\"\n  },\n  {\n    value: 23,\n    label: \"Meghalaya\"\n  },\n  {\n    value: 24,\n    label: \"Mizoram\"\n  },\n  {\n    value: 25,\n    label: \"Nagaland\"\n  },\n  {\n    value: 26,\n    label: \"Odisha\"\n  },\n  {\n    value: 27,\n    label: \"Puducherry\"\n  },\n  {\n    value: 28,\n    label: \"Punjab\"\n  },\n  {\n    value: 29,\n    label: \"Rajasthan\"\n  },\n  {\n    value: 30,\n    label: \"Sikkim\"\n  },\n  {\n    value: 31,\n    label: \"Tamil Nadu\"\n  },\n  {\n    value: 32,\n    label: \"Telangana\"\n  },\n  {\n    value: 33,\n    label: \"Tripura\"\n  },\n  {\n    value: 34,\n    label: \"Uttar Pradesh\"\n  },\n  {\n    value: 35,\n    label: \"Uttarakhand\"\n  },\n  {\n    value: 36,\n    label: \"West Bengal\"\n  }\n];\n\n// {\n//   \"email\": \"foo@ymail.com\",\n//   \"pincode\": \"560068\",\n//   \"age\": 63,\n//   \"mode\": 2,\n//   \"dist_id\": \"294\"\n// }\n\n// 35.245.41.254:8080/districts\n// {\n//     \"value\": \"30\"\n// }\n","\nimport * as Yup from \"yup\";\nimport { lettersWithSpaces, numeric } from \"../../constants/common\";\n\nexport const registerSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(lettersWithSpaces, \"Name should not contain special character\")\n    .required(\"Please enter a valid Name\")\n    .min(3, \"First name is too short (minimum is 3 characters)\"),\n  age: Yup.object().required(\"Please select valid age group\"),\n  notifyOn: Yup.string().required(\"Notification mode is mandatory\"),\n  // email: Yup.string()\n  //   .email(\"Please enter a valid email address\")\n  //   .required(\"Email is required\"),\n  mode: Yup.number().required(\"Mode is mandatory\"),\n  // pincode:Yup.string().when('mode', {\n  //   is: '1',\n  //   then: Yup.string()\n  //   .required(\"Pincode is required\")\n  //   .matches(numeric, \"Pincode should be Numeric\")\n  //   .max(6, \"Pincode length should be 6\")\n  //   .min(6, \"Pincode length should be 6\"),\n  //   // otherwise: Yup.string().notRequired(),\n  // }),\n  // pincode: Yup.string()\n  // .matches(numeric, \"Pincode should be Numeric\")\n  // .required(\"Pincode is required\")\n  // .max(6, \"Pincode length should be 6\")\n  //   .min(6, \"Pincode length should be 6\"),\n  // state:Yup.object().when('mode', {\n  //   is: '2',\n  //   then: Yup.object().required('State is mandatory'),\n  //   otherwise: Yup.object().notRequired(),\n  // }), \n  // district:Yup.object().when('mode', {\n  //   is: '2',\n  //   then: Yup.object().required('District is mandatory'),\n  //   otherwise: Yup.object().notRequired(),\n  // })\n});\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport cx from \"classnames\";\n\nclass SelectInput extends Component {\n  render() {\n    const {\n      value,\n      onChange,\n      isDisabled,\n      error,\n      options,\n      isMulti,\n      isSearchable,\n      placeholder,\n      className,\n      defaultValue,\n      labelText,\n      required,\n      classNameOut\n    } = this.props;\n    return (\n      <div className={cx(\"form-group\", classNameOut)}>\n        {labelText ? (\n          <label>\n            {labelText}\n            {required ? <sup>*</sup> : null}\n          </label>\n        ) : null}\n        <Select\n          classNamePrefix=\"select-dropdown\"\n          className={className}\n          onChange={onChange}\n          value={value}\n          isDisabled={isDisabled}\n          placeholder={placeholder}\n          options={options}\n          isMulti={isMulti}\n          isSearchable={isSearchable}\n          defaultValue={defaultValue}\n        />\n        {error ? <span className=\"error-message\">{error}</span> : null}\n      </div>\n    );\n  }\n}\n\nexport default SelectInput;\n","import React, { Component } from 'react';\nimport {  Field, ErrorMessage } from 'formik';\nimport cx from 'classnames';\n\nexport default class FormInput extends Component {\n    render() {\n        const { name, type, placeholder, id, conditionalClass, labelText, required, className, disabled } = this.props\n        return (\n            <div className={cx(\"form-group\", className)}>\n                {\n                    labelText ? <label>{labelText} {required ? <sup>*</sup> : null}</label> : null\n                }\n                <Field\n                    name={name}\n                    type={type}\n                    id={id}\n                    placeholder={placeholder}\n                    className={cx(\"form-control\", conditionalClass)}\n                    disabled={disabled}\n                />\n                <ErrorMessage\n                    name={name}\n                    component=\"span\"\n                    className=\"error-message\"\n                />\n            </div>\n        )\n    }\n}","export const apiBaseUrl = \"https://covid.shopatdoor.in\";","import React from 'react'\n\nconst Button = ({ content }) => {\n  return (\n    <div className=\"btn-wrapper\">\n      <button type=\"submit\" className=\"btn btn-primary custom-btn\">{content}</button>\n    </div>\n  )\n}\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { registerSchema } from \"./formValidation\";\nimport SelectInput from \"../common/SelectInput\";\nimport FormInput from \"../common/FormInput\";\nimport { ageGroupList, stateList, vaccinePrefList } from \"../../constants/common\";\nimport { apiBaseUrl } from \"../../constants/env\";\nimport Button from \"../common/Button\";\n\nconst formInitialValues = {\n  name: \"\",\n  age: \"\",\n  notifyOn: \"email\",\n  email: \"\",\n  telegram: \"\",\n  vaccinePref: \"\",\n  mode: \"1\",\n  state: \"\",\n  district: \"\",\n  pincode: \"\"\n};\n\nconst CustomForm = () => {\n  const [initialValues, setInitialValues] = useState({...formInitialValues});\n  const [districtList, setDistrictList] = useState([]);\n\n  const handleSelectChange = (setFieldValue, key, selectedOption, ) => {\n    setInitialValues({\n      ...initialValues,\n      [key]: selectedOption\n    });\n    setFieldValue(key, selectedOption);\n  };\n\n  const getDistrictList = async (stateId) => {\n    if(stateId){\n      const rawResponse = await fetch(`${apiBaseUrl}/districts`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ state_id: stateId })\n        }\n      );\n      const content = await rawResponse.json();\n      if(content?.status === 200){\n        let districts = content?.data?.districts;\n        districts = districts.map(d => {\n          let districtID = d.district_id;\n          let a = { value: districtID.toString(), label: d.district_name}\n          return a;\n        });\n        setDistrictList(districts)\n      }\n      else{\n        window.alert('Something Went Wrong!')\n      }\n    }\n  };\n\n  useEffect(() => {\n    getDistrictList(initialValues?.state?.value);\n  }, [initialValues.state]);\n\n  return (\n    <div>\n      <div className=\"box1 form-wrapper\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={registerSchema}\n          onSubmit={async (values, actions) => {\n            const payload = {};\n            payload.name = values.name;\n            payload.notifyOn = values.notifyOn;\n            payload.email = payload.notifyOn === \"email\" ? values.email : values.telegram;\n            payload.age = values.age?.value;\n            payload.vaccinePref = values.vaccinePref?.value || \"\";\n            payload.mode = parseInt(values.mode);\n            if(payload.mode===1){\n              payload.pincode = values.pincode;\n            } else if(payload.mode === 2){\n              payload.dist_id = values.district?.value;\n            }\n\n            const rawResponse = await fetch(`${apiBaseUrl}/userinfo`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({...payload})\n            });\n            const response = await rawResponse.json();\n            if(response?.status === 200){\n              window.alert(response.data);\n              actions.resetForm({});\n              setInitialValues({...formInitialValues})\n            }\n            else{\n              window.alert('Something Went Wrong!')\n            }\n          }}\n        >\n          {(props) => (\n            <form onSubmit={props.handleSubmit}>\n\n              <label htmlFor=\"name\">Name</label>\n              <FormInput id=\"name\" name=\"name\" placeholder=\"Enter your name\" />\n\n              <div id=\"my-radio-group\">Notify me on</div>\n              <div role=\"group\" aria-labelledby=\"notifyOn\">\n                <label>\n                  <Field type=\"radio\" name=\"notifyOn\" value=\"email\" />\n                  {' '}Email\n                </label>{' '}\n                <label>\n                  <Field type=\"radio\" name=\"notifyOn\" value=\"telegram\" />\n                  {' '}Telegram\n                </label>\n              </div>\n              <ErrorMessage\n                name=\"notifyOn\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n\n              { props.values.notifyOn === \"email\" && \n                <>\n                  <label htmlFor=\"email\">Email</label>\n                  <FormInput\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter your Email\"\n                    type=\"email\"\n                  />\n                </>\n              }\n              { props.values.notifyOn === \"telegram\" && \n                <>\n                  <label htmlFor=\"email\">\n                    Telegram Chat ID\n                    <span className=\"info\"><a href=\"https://yadav-vikesh27.medium.com/how-to-get-telegram-chat-id-and-subscribe-vaccine-availability-a9adcead093e\" target=\"_blank\">\n                      {' '}How to get Telegram Chat ID?\n                    </a></span>\n                  </label>\n                  <FormInput\n                    id=\"telegraml\"\n                    name=\"telegram\"\n                    placeholder=\"Enter your Telegram Chat ID\"\n                  />\n                </>\n              }\n\n              <label htmlFor=\"age\">Age Group</label>\n              <SelectInput\n                placeholder=\"Select Age Group\"\n                value={initialValues?.age}\n                onChange={(selectedOption) =>{\n                  handleSelectChange(props.setFieldValue, \"age\", selectedOption);\n                }}\n                options={ageGroupList}\n                error={props.errors.age}\n              />\n\n              <label htmlFor=\"vaccine\">Vaccine Preference</label>\n              <SelectInput\n                placeholder=\"Select your vaccine\"\n                value={initialValues?.vaccinePref}\n                onChange={(selectedOption) =>{\n                  handleSelectChange(props.setFieldValue, \"vaccinePref\", selectedOption);\n                }}\n                options={vaccinePrefList}\n              />\n\n              <div id=\"my-radio-group\">Mode</div>\n              <div role=\"group\" aria-labelledby=\"mode\">\n                <label>\n                  <Field type=\"radio\" name=\"mode\" value=\"1\" />\n                  {' '}Pincode\n                </label>{' '}\n                <label>\n                  <Field type=\"radio\" name=\"mode\" value=\"2\" />\n                  {' '}District\n                </label>\n              </div>\n              <ErrorMessage\n                name=\"mode\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n\n              { props.values.mode === \"1\" && \n                <>\n                  <label htmlFor=\"pincode\">Pincode</label>\n                  <FormInput\n                    id=\"pincode\"\n                    name=\"pincode\"\n                    placeholder=\"Enter your pincode\"\n                  />\n                </> \n              }\n              { props.values.mode === \"2\" &&\n                <>\n                  <label htmlFor=\"state\">State</label>\n                  <SelectInput\n                    placeholder=\"Select State\"\n                    value={initialValues?.state}\n                    onChange={(selectedOption) => {\n                      handleSelectChange(props.setFieldValue, \"state\", selectedOption);\n                    }}\n                    options={stateList}\n                    error={props.errors.state}\n                  />\n                  <label htmlFor=\"District\">District</label>\n                  <SelectInput\n                    placeholder=\"Select District\"\n                    value={initialValues?.district}\n                    onChange={(selectedOption) =>\n                      handleSelectChange(props.setFieldValue, \"district\", selectedOption)\n                    }\n                    options={districtList}\n                    error={props.errors.district}\n                  />\n                </> \n              }\n              <br/>\n              <Button content=\"Notify me\"/>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomForm;\n","import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport FormInput from \"../common/FormInput\";\nimport { apiBaseUrl } from \"../../constants/env\";\nimport Button from \"../common/Button\";\n\nconst formIinitialValues = {\n  email: \"\",\n};\n\nconst Unsubscribe= () => {\n  const [initialValues, setInitialValues] = useState({...formIinitialValues});\n  return (\n    <div>\n      <div className=\"box1 form-wrapper\">\n        <Formik\n          initialValues={initialValues}\n          onSubmit={async (values, actions) => {\n            if(values.email) {\n              const payload = {};\n              payload.email = values.email;\n              const rawResponse = await fetch(`${apiBaseUrl}/unsubscribe`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({...payload})\n              });\n              const response = await rawResponse.json();\n              if(response?.status === 400){\n                window.alert(response.data);\n                actions.resetForm({});\n              }\n              else{\n                window.alert('Something Went Wrong!')\n              }\n            }\n          }}\n        >\n          {(props) => (\n            <form onSubmit={props.handleSubmit}>\n              <label htmlFor=\"email\">Email</label>\n              <FormInput\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your Email\"\n                type=\"email\"\n              />\n              <br/>\n              {/* <button type=\"submit\" className=\"btn btn-primary custom-btn\">Unsubscribe from Mail</button> */}\n              <Button\n                content=\"Revoke\"\n              />\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\nexport default Unsubscribe;\n","import React, { useState, useEffect } from \"react\";\nimport { apiBaseUrl } from \"../../constants/env\";\n\nconst  Subsribers = () => {\n\n  const [subscribedUsers, setSubscribedUsers] = useState(null);\n\n  const getSubscribedData = async (values, actions) => {\n    const rawResponse = await fetch(`${apiBaseUrl}/users`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const response = await rawResponse.json();\n    if(response?.status === 200){\n      setSubscribedUsers(response.data);\n    }\n  }\n\n  useEffect(() => {\n    getSubscribedData();\n    setInterval(() => {\n      getSubscribedData();\n    }, 5000);\n  }, []);\n\n  return (\n    <div className=\"box2 subscription\">\n      Registered Users Count : {subscribedUsers}\n    </div>\n  );\n}\nexport default Subsribers;\n","import React, { useState, useEffect } from \"react\";\nimport bmcButton from \"../../assets/bmc-button.png\";\n\nconst Coffee = () => {\n  return (\n    <div className=\"box2 text-center\">\n      <a href=\"https://www.buymeacoffee.com/vikesh\" target=\"_blank\">\n        <img src={bmcButton} alt=\"Buy me a Coffee\" width=\"175\" height=\"50\" />\n      </a>\n    </div>\n  );\n}\nexport default Coffee;\n","import React from \"react\";\nimport \"../../src/styles.scss\";\nimport CustomForm from \"./CustomForm\";\nimport Unsubscribe from \"./features/Unsubscribe\";\nimport Subsribers from \"./features/Subsribers\";\nimport Coffee from \"./features/Coffee\";\n\nconst  App = () => {\n  return (\n    <div className=\"container-fluid col-md-6\">\n      <div className=\"heading\">\n        <h2>Vaccine Availability</h2>\n        <br/>\n        <h6>\n          Submit following details, and we'll notify you, as soon as COVID-19 vaccine\n          is available in your area for next 7 days.\n        </h6>\n      </div>\n      <Subsribers />\n      <CustomForm />\n      <Coffee />\n      <Unsubscribe />\n      <div className=\"box2 text-center\">\n        Created by <a href=\"https://github.com/vickxy\" target=\"_blank\">Vikesh</a> with 🖤\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'))\n    \nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bmc-button.40242a95.png\";"],"sourceRoot":""}